1.Lua 中的变量全是全局变量，无论语句块或是函数里，除非用 local 显式声明为局部变量，变量默认值均为nil
2.使用local创建一个局部变量，与全局变量不同，局部变量只在被声明的那个代码块内有效。（代码块：指的是一个控制结构内，一个函数体，或者一个chunk（变量被声明的那个文件或者文本串））
3.尽可能使用局部变量，有两个好处
    a.避免命名冲突	b.访问速度更快（原因是local变量是存放在lua的堆栈里面的是array操作，而全局变量是存放在_G中的table中，效率不及堆栈）
4.Lua中的函数可以作为全局变量也可作为局部变量，当我们将函数保存在一个局部变量里时，我们将得到一个局部函数。局部函数和局部变量一样在一定范围内有效。
     a. 使用function声明的函数为全局函数，在被引用时可以不会因为声明的顺序而找不到 
     b. 使用local function声明的函数为局部函数，在引用的时候必须要在声明的函数后面
5.其他补充：
    a.local变量过多也会有堆栈溢出的问题，一段过程下最多拥有200个local变量，且do end不算。类似这样：