array是一个数组，在它声明时需要设置好长度，指定好数据的类型。

arrayList是一个可以动态改变的数组，继承了Ilist接口。本质还是属于数组。在初始化时，它的长度默认是10，当往这个数组里添加元素超过它的容量时，它会新创建一个数组，长度为原数组的1.5倍，并且通过array.copy（）的方式，把原数组的数据拷贝到新数组 。数组内数据的访问是通过index。存在一个装箱和拆箱的操作。装箱：将值类型转化为引用类型 。拆箱：将引用类型转化为值类型

list是一个链表，继承Ilist接口。list<>在声明时需要指定数据的类型，这就说明了它没有装箱和拆箱操作。它的访问是通过链表的指针。也就是说，list链表里每一个节点保存的是这个节点的前节点（前驱），数据，后节点（后继）。

在使用过程中，更偏向与使用list。

如果你经常需要访问数据的某一个值，建议使用ArrayList。因为通过index更快，arr【index】可以直接找到这个数据。

如果你经常需要对数据进行增删改查，建议使用list